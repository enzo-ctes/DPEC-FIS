<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEoAAAAfCAIAAADP8cxiAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABBtJREFUWEftl9dOJDEQRflWJETOLBmWnJMIIogsREbEJcf1EiQQEn+0Z1zVxtPd
        A6804jyMqjwed19XsCfLfGt+5CWZT+T9Sefg4IBP/S4JZJRXX19fUVHxy6OqqqqgoODq6kpnJIF4ef39
        /bW1tb/Tqays3N7e1hkJIUbe8vIygVJNlpaWlpqamrGxMZ2RHMLyrq+viZLKCmhoaGhtbdUZiSIsjyg1
        NTWpLEtzc3N1dbV+nTTS5LW3t9NRVFYAwTw7O9MZltvb27u7O3UCbm5unp6e1DHm/v6eQt3a2iIddCjg
        5ORELWNoVMxUJ+Dy8lKt4Fngr/PXwld86lAG3uVNTk4SJcpMZdmSo2HOz8/rjIC+vr68vDx1AnJyctxM
        tqmwsLCuro7NKioqIrdlHBYXF7Ozs9UxhpwvLi5WJ4AJ0sN4h/LycunbJSUlrvhZk1dlfXp7WVnZ7Oys
        jEdRefv7+9GS4/c9PT0ywYfd5YTgJ+rbn6NH7I6ODp5KMMXFoFGR4eKura3xomLD4eEhS11cXKhvzPr6
        upvAUiC2T2lp6dLSktijo6M8+vHxUdwQKXkvLy9sD2+gsiyNjY3svUyKwuYNDg6qYw+StrY2sXnYysqK
        2MLCwgL7/fDwgB2SB+zF+Pi4Ojbyvb29YqOtq6tLbB8CvrGxITapTir5+eyTkkcvIX9UlgWphE5eKJaJ
        iQmirY4xZIg8b3NzE3mhcqJsGNzb28OOymOb6Gfq2MTjbiR2Z2cn2cvPpdJkEIgeSS42+eW/SYgsEpfk
        8UsO0DY1NaVT4qAl5Ofnn56eYtN4XGZyZrK1r6+v4jqYIOUUlXd0dER+Sq9iC/xvu7u7SSIuGOgnyDpq
        DCOEhAxCmMuaWFLRQ0z0MGBdmZEJVpda59Odirw92++3UDg/P0cAMrCj8oD+MTc3h0FausyETLWHVHaf
        5KIoPqggSMkj9NG+Qrq6fhALBSMtkd1xlUANECjag7jC9PQ0IX17e8OOlTcwMEAQnp+fySOXmYC2T2uP
        NyfIYkfRzrm6uhpKUbmIjYyMyIQocr9hacKoQxbUkjyubo+PjykV14eQR6FKKjoILE9nKb8IwQYvJnps
        EC8s9szMDPkidhSVB8PDw6yu4iwo5KmhUPjQb4lVKPsRhjweiU4WZIJ/ulCcjMh5lZub6yocl3FOVHEF
        3sGde+zR0NCQjHMw0o3FBo5cv437vMsDsjHUQgGF+nUc0l2i0Ht2dnZ2d3dDdQj0wH8WvxkyLXYpdy/x
        J4duUZDp+pImj47HPkUPQOKgM5JGmjzgGhFtM8j7oHy/MmF5QKMjhqE2w8gHV7svS4w8oF/F/nXwL/uJ
        IF4eyJ0g1bMsuPSY6JH9xckoDzij6H4+HKb+H4Wvz0fyvgE/8pLMj7zkYsx/uj1TZ1b09TQAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>